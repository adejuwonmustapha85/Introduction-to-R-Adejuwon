"Hello"
mpanied by a speech mark "" if it is a code  ####
"Hello"
### Any character in R needs to be accompanied by a speech mark "" if it is a code  ####
mpanied by a speech mark "" if it is a code  ####
ccompanied by a speech mark "" if it is a code  ####
x <- "hello"
x
y <- 1
z <- c(x,y)
z
x <- "hello"
x
y <- 1
z <- c(x,y)
z
library(tidyverse)
# Create a vector containing the values 1,2,3,4,5
First_Data <- c(1, 2, 3, 4, 5)
print(First_Data)
# Create a vector containing the values 1 to 100
Listed_data <- 1:100
print(Listed_data)
# Create a vector containing the values 0,5,10,15,20
seq(0, 20, 5)
Second_data <- c(0, 5, 10, 15, 20)
print(Second_data)
Third_data <- c(1, 1, 2, 2, 3, 3,)
Third_data <- c(1, 1, 2, 2, 3, 3)
print(Third_data)
Fourth_data <- c(1, 1, 5, 7, 9, 10)
print(Fourth_data)
library(tidyverse)
# Create a vector containing the values 1,2,3,4,5
First_Data <- c(1, 2, 3, 4, 5)
print(First_Data)
# Create a vector containing the values 1 to 100
Listed_data <- 1:100
print(Listed_data)
Second_data <- c(0, 5, 10, 15, 20)
print(Second_data)
Third_data <- c(1, 1, 2, 2, 3, 3)
print(Third_data)
Fourth_data <- c(1, 1, 5, 7, 9, 10)
print(Fourth_data)
Data_vector2 <-  1:10
print(Data_vector2)
Data_vector3 <- Data_vector2[2:(length(Data_vector2)-1)]
print(Data_vector3)
Data_vector4 <- Data_vector2[3:(length(Data_vector2)+4)]
print(Data_vector4)
Data_vector4 <- Data_vector2[3:(length(Data_vector2)-4)]
print(Data_vector4)
Data_vector4 <- Data_vector2[3:(length(Data_vector2)-2)]
print(Data_vector4)
Data_vector4 <- Data_vector2[3:(length(Data_vector2)-1)]
print(Data_vector4)
# Create a vector containing the values 1,2,3,4,5
First_Data <- c(1, 2, 3, 4, 5)
print(First_Data)
# Create a vector containing the values 1 to 100
Listed_data <- 1:100
print(Listed_data)
Second_data <- c(0, 5, 10, 15, 20)
print(Second_data)
Third_data <- c(1, 1, 2, 2, 3, 3)
print(Third_data)
Fourth_data <- c(1, 1, 5, 7, 9, 10)
print(Fourth_data)
Data_vector2 <-  1:10
print(Data_vector2)
Data_vector3 <- Data_vector2[2:(length(Data_vector2)-1)]
print(Data_vector3)
Data_vector4 <- Data_vector2[3:(length(Data_vector2)-1)]
print(Data_vector4)
Data_vector4 <- Data_vector2[-c(2, 5)]
print(Data_vector4)
# Create a new vector of square root of the sixth and seventh position
sqrt_Data_vector <- sqrt(Data_vector2[6:7])
print(sqrt_Data_vector)
# Create a new vector of alternating positions in the vector using another vector
alt_pos <- seq(1, length(Data_vector2), by = 2)
Data_vector5 <- Data_vector2[alt_pos]
print(Data_vector5)
# Find the number of files in the present working directory
length(list.files())
print(Data_vector5)
# 1. Find the number of files in the present working directory
length(list.files())
getwd()
